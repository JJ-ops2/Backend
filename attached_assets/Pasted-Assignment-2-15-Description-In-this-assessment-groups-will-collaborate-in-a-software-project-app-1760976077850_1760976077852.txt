Assignment 2 15%
Description
In this assessment groups will collaborate in a software project, apply an architectural style, perform test planning and implementation.

Group Selection Sheet

Note: Create a github organization composed of the group members. Then create a fork of any member’s assignment 1 under the organization.

Tasks
Refactor
Refactor the code base to apply the Model View Controller architectural pattern. Command logic should be moved into reusable controllers. This also includes necessary changes to models.

Design
Create a low-fidelity minimal wireframe diagram that covers all main features of the application. Provide use case and model diagrams as well showing any updates.

Implementation
Implement views in the application to make the features accessible via a REST API with authentication. No UI

Test Planning
Create a User Acceptance Test with reference to the wireframe diagram. Create Unit Test & Integration Test Plans.

Test Implementation
Implement Unit & Integration tests with pytest. Create a postman collection for API tests.

 
Deliverables
Submit 1 PDF document per group  containing the following

Cover page 
Group Name - Project Title
Group Members Names & IDs, Github Usernames
Use Case Diagram (May reuse From A1)
Application Wireframe
Published Postman Documentation (Updated with postman test scripts )
Test Plans
User Acceptance Tests
Unit Tests
Integration Tests
Implementation (link to repository)
Unit Tests
Integration Tests
API Tests (postman collection exported to json in repo)
Breakdown
Component

Description

Percentage

Refactor

Forked project was generated from FlaskMVC template
Implemented appropriate controllers
Reused controllers in cli command and views
10

Designs

Appropriate usecase and model diagram.
LOW FIDELITY wireframe, no colours, animation, interactive links
Covers all main features shown in the use case diagram
10

Implementation

Appropriate views implemented to facilitate minimum viable feature set
Authorization implemented
Views follow REST API conventions
20

Test Plans

Appropriate unit testing of modules in isolation
Integration tests covers main functionality of the application
UAT’s give reasonable tasks/success criteria that can be completed/validated by the user
25

Test Implementation

Tests implemented according to test plans
Unit & Integration tests are runnable via the CLI
All postman test scripts implemented for API testing
Postman collection runnable
25

Test Reporting

Screenshots of passing unit and integration tests
Screenshots of passing collection run on postman
10

Total

 	
100